{
  "service": {
    "service": "tutorialedge-rest-api",
    "serviceObject": {
      "name": "tutorialedge-rest-api"
    },
    "provider": {
      "stage": "dev",
      "region": "eu-west-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "go1.x",
      "memorySize": 512,
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "HealthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tutorialedge-rest-api-test-health"
            }
          },
          "AchievementsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tutorialedge-rest-api-test-achievements"
            }
          },
          "CommentsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tutorialedge-rest-api-test-comments"
            }
          },
          "ChallengesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tutorialedge-rest-api-test-challenges"
            }
          },
          "UsersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tutorialedge-rest-api-test-users"
            }
          },
          "CodeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tutorialedge-rest-api-test-code"
            }
          },
          "PostsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tutorialedge-rest-api-test-posts"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "test",
                        "tutorialedge-rest-api",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-health:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-achievements:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-comments:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-challenges:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-users:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-code:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-posts:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-health:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-achievements:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-comments:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-challenges:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-users:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-code:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tutorialedge-rest-api-test-posts:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "tutorialedge-rest-api",
                    "test",
                    "eu-west-1",
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "HealthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z/tutorialedge-rest-api.zip"
              },
              "FunctionName": "tutorialedge-rest-api-test-health",
              "Handler": "bin/health",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {}
              }
            },
            "DependsOn": [
              "HealthLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HealthLambdaVersion2X6Li495ffXTG5FCdjn3fXa0Ueqxx2VF5HSitAYkmm8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HealthLambdaFunction"
              },
              "CodeSha256": "z3iM6vtkjp8E4mg5KIUtgkwlwcIWIyVaBonNBll7UTE="
            }
          },
          "AchievementsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z/tutorialedge-rest-api.zip"
              },
              "FunctionName": "tutorialedge-rest-api-test-achievements",
              "Handler": "bin/achievements",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6
            },
            "DependsOn": [
              "AchievementsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AchievementsLambdaVersion3z3HEaGGbUZ1HT0jFhvzVM3N2RWilh9378tNdrEsE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AchievementsLambdaFunction"
              },
              "CodeSha256": "z3iM6vtkjp8E4mg5KIUtgkwlwcIWIyVaBonNBll7UTE="
            }
          },
          "CommentsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z/tutorialedge-rest-api.zip"
              },
              "FunctionName": "tutorialedge-rest-api-test-comments",
              "Handler": "bin/comments",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AUTH0_SIGNING_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIC+jCCAeKgAwIBAgIJI4S/RnH+v3qVMA0GCSqGSIb3DQEBBQUAMCQxIjAgBgNV\r\nBAMTGXR1dG9yaWFsZWRnZS5ldS5hdXRoMC5jb20wHhcNMTcwMTA2MTQxODE1WhcN\r\nMzAwOTE1MTQxODE1WjAkMSIwIAYDVQQDExl0dXRvcmlhbGVkZ2UuZXUuYXV0aDAu\r\nY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Ln5SAQAYkXoRN/\r\ni7cynzrERIQIDnE5MaumYQvQgOQheplIH1VJhVLBjYp3W6fTyfogvE0SoLUFr267\r\nu+JIDl6Mu8CZDzUBd+A2MF6n9HPQPYWnCDWntVcwrqh2pkb7nEHSbY2y2eryhQIM\r\nTS2XyxHx/Jtpx+0518sGM47KXd/WKaP5dfhgwup/8mu7W/vpPuNNgs6ORy2gjiN8\r\nb8fRsulxu7m/AtBpvY2vPKyMKJvoMHQuY5CCue3K8Rq8T1FaznsaoUKxn+eM9MZF\r\nDYcBIo2Dhg2VTMpn+H88Ji2Q2FS57NkboZgsM+465GTc4hjIxNmi3iUbTDGolPqO\r\nUbNcUQIDAQABoy8wLTAMBgNVHRMEBTADAQH/MB0GA1UdDgQWBBSc6/7ITJyhrk0q\r\nAgYK3/RNwYlG/DANBgkqhkiG9w0BAQUFAAOCAQEATP0SO03HI7i3rUlguzdKh20N\r\n/Tcr+5L4AhYKBS3XT3RGgAbbspQ0EPi5U07zZ7YWQDVWVbmM20tVgYz5pj2LQupq\r\no4IZIea66wdZe9vJ0+FUSmBKjoQbhfhfi/AkIi4/n6ws3Gx2L0DWiwrlgz1mKSKA\r\nRJOv62o9PHlY7XWRhWEI/2FkeApHEu/iLC4vuCBuNIEgppm3m21wYSSGM+gSyGaN\r\nfMSIdjk2PmknhRtq+72uWaJpNTNUbeG3xFoZoa3uIA6TpBHgA7smHY6AE0cSvG7D\r\nM9efoZSisO/gX51ho3MT1Mywy/P3UOYb0u+lyLevhrbcCsDZSHKOHT02sw+hZA==\r\n-----END CERTIFICATE-----",
                  "DB_USERNAME": "doadmin",
                  "DB_PASSWORD": "bw0bfbhocs14fiyq",
                  "DB_HOST": "db-mysql-nyc1-16484-do-user-1074347-0.a.db.ondigitalocean.com",
                  "DB_TABLE": "defaultdb",
                  "MAILGUN_API_KEY": "key-55e42fdafd8773bb4ad1a8b1e8a029d3"
                }
              }
            },
            "DependsOn": [
              "CommentsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CommentsLambdaVersionU0xd08tpDsxGCg7CIkaADpPzI7Apz1Mrjlau2p8gCA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CommentsLambdaFunction"
              },
              "CodeSha256": "z3iM6vtkjp8E4mg5KIUtgkwlwcIWIyVaBonNBll7UTE="
            }
          },
          "ChallengesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z/tutorialedge-rest-api.zip"
              },
              "FunctionName": "tutorialedge-rest-api-test-challenges",
              "Handler": "bin/challenges",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6
            },
            "DependsOn": [
              "ChallengesLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ChallengesLambdaVersion0aK8VzZ6933dGe6GmMp62Z5ytqmmtPagS3yuU8gw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ChallengesLambdaFunction"
              },
              "CodeSha256": "z3iM6vtkjp8E4mg5KIUtgkwlwcIWIyVaBonNBll7UTE="
            }
          },
          "UsersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z/tutorialedge-rest-api.zip"
              },
              "FunctionName": "tutorialedge-rest-api-test-users",
              "Handler": "bin/users",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AUTH0_SIGNING_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIC+jCCAeKgAwIBAgIJI4S/RnH+v3qVMA0GCSqGSIb3DQEBBQUAMCQxIjAgBgNV\r\nBAMTGXR1dG9yaWFsZWRnZS5ldS5hdXRoMC5jb20wHhcNMTcwMTA2MTQxODE1WhcN\r\nMzAwOTE1MTQxODE1WjAkMSIwIAYDVQQDExl0dXRvcmlhbGVkZ2UuZXUuYXV0aDAu\r\nY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Ln5SAQAYkXoRN/\r\ni7cynzrERIQIDnE5MaumYQvQgOQheplIH1VJhVLBjYp3W6fTyfogvE0SoLUFr267\r\nu+JIDl6Mu8CZDzUBd+A2MF6n9HPQPYWnCDWntVcwrqh2pkb7nEHSbY2y2eryhQIM\r\nTS2XyxHx/Jtpx+0518sGM47KXd/WKaP5dfhgwup/8mu7W/vpPuNNgs6ORy2gjiN8\r\nb8fRsulxu7m/AtBpvY2vPKyMKJvoMHQuY5CCue3K8Rq8T1FaznsaoUKxn+eM9MZF\r\nDYcBIo2Dhg2VTMpn+H88Ji2Q2FS57NkboZgsM+465GTc4hjIxNmi3iUbTDGolPqO\r\nUbNcUQIDAQABoy8wLTAMBgNVHRMEBTADAQH/MB0GA1UdDgQWBBSc6/7ITJyhrk0q\r\nAgYK3/RNwYlG/DANBgkqhkiG9w0BAQUFAAOCAQEATP0SO03HI7i3rUlguzdKh20N\r\n/Tcr+5L4AhYKBS3XT3RGgAbbspQ0EPi5U07zZ7YWQDVWVbmM20tVgYz5pj2LQupq\r\no4IZIea66wdZe9vJ0+FUSmBKjoQbhfhfi/AkIi4/n6ws3Gx2L0DWiwrlgz1mKSKA\r\nRJOv62o9PHlY7XWRhWEI/2FkeApHEu/iLC4vuCBuNIEgppm3m21wYSSGM+gSyGaN\r\nfMSIdjk2PmknhRtq+72uWaJpNTNUbeG3xFoZoa3uIA6TpBHgA7smHY6AE0cSvG7D\r\nM9efoZSisO/gX51ho3MT1Mywy/P3UOYb0u+lyLevhrbcCsDZSHKOHT02sw+hZA==\r\n-----END CERTIFICATE-----",
                  "DB_USERNAME": "doadmin",
                  "DB_PASSWORD": "bw0bfbhocs14fiyq",
                  "DB_HOST": "db-mysql-nyc1-16484-do-user-1074347-0.a.db.ondigitalocean.com",
                  "DB_TABLE": "defaultdb",
                  "MAILGUN_API_KEY": "key-55e42fdafd8773bb4ad1a8b1e8a029d3"
                }
              }
            },
            "DependsOn": [
              "UsersLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UsersLambdaVersion2VAoJLHnYF7JmDHymW8RLKJQu93ybLt8HvuoxRfjiY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersLambdaFunction"
              },
              "CodeSha256": "z3iM6vtkjp8E4mg5KIUtgkwlwcIWIyVaBonNBll7UTE="
            }
          },
          "CodeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z/tutorialedge-rest-api.zip"
              },
              "FunctionName": "tutorialedge-rest-api-test-code",
              "Handler": "code/code.lambda_handler",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 900
            },
            "DependsOn": [
              "CodeLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CodeLambdaVersionhgGv8kuVx750NMOP5YfRo8ZTMu4p831CgD2P8xzuuqI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CodeLambdaFunction"
              },
              "CodeSha256": "z3iM6vtkjp8E4mg5KIUtgkwlwcIWIyVaBonNBll7UTE="
            }
          },
          "PostsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z/tutorialedge-rest-api.zip"
              },
              "FunctionName": "tutorialedge-rest-api-test-posts",
              "Handler": "bin/posts",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AUTH0_SIGNING_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIC+jCCAeKgAwIBAgIJI4S/RnH+v3qVMA0GCSqGSIb3DQEBBQUAMCQxIjAgBgNV\r\nBAMTGXR1dG9yaWFsZWRnZS5ldS5hdXRoMC5jb20wHhcNMTcwMTA2MTQxODE1WhcN\r\nMzAwOTE1MTQxODE1WjAkMSIwIAYDVQQDExl0dXRvcmlhbGVkZ2UuZXUuYXV0aDAu\r\nY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Ln5SAQAYkXoRN/\r\ni7cynzrERIQIDnE5MaumYQvQgOQheplIH1VJhVLBjYp3W6fTyfogvE0SoLUFr267\r\nu+JIDl6Mu8CZDzUBd+A2MF6n9HPQPYWnCDWntVcwrqh2pkb7nEHSbY2y2eryhQIM\r\nTS2XyxHx/Jtpx+0518sGM47KXd/WKaP5dfhgwup/8mu7W/vpPuNNgs6ORy2gjiN8\r\nb8fRsulxu7m/AtBpvY2vPKyMKJvoMHQuY5CCue3K8Rq8T1FaznsaoUKxn+eM9MZF\r\nDYcBIo2Dhg2VTMpn+H88Ji2Q2FS57NkboZgsM+465GTc4hjIxNmi3iUbTDGolPqO\r\nUbNcUQIDAQABoy8wLTAMBgNVHRMEBTADAQH/MB0GA1UdDgQWBBSc6/7ITJyhrk0q\r\nAgYK3/RNwYlG/DANBgkqhkiG9w0BAQUFAAOCAQEATP0SO03HI7i3rUlguzdKh20N\r\n/Tcr+5L4AhYKBS3XT3RGgAbbspQ0EPi5U07zZ7YWQDVWVbmM20tVgYz5pj2LQupq\r\no4IZIea66wdZe9vJ0+FUSmBKjoQbhfhfi/AkIi4/n6ws3Gx2L0DWiwrlgz1mKSKA\r\nRJOv62o9PHlY7XWRhWEI/2FkeApHEu/iLC4vuCBuNIEgppm3m21wYSSGM+gSyGaN\r\nfMSIdjk2PmknhRtq+72uWaJpNTNUbeG3xFoZoa3uIA6TpBHgA7smHY6AE0cSvG7D\r\nM9efoZSisO/gX51ho3MT1Mywy/P3UOYb0u+lyLevhrbcCsDZSHKOHT02sw+hZA==\r\n-----END CERTIFICATE-----",
                  "DB_USERNAME": "doadmin",
                  "DB_PASSWORD": "bw0bfbhocs14fiyq",
                  "DB_HOST": "db-mysql-nyc1-16484-do-user-1074347-0.a.db.ondigitalocean.com",
                  "DB_TABLE": "defaultdb",
                  "MAILGUN_API_KEY": "key-55e42fdafd8773bb4ad1a8b1e8a029d3"
                }
              }
            },
            "DependsOn": [
              "PostsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PostsLambdaVersionEJZt7AcENU0UsNcQMq9LhchaD3qESN96OTAgMwSCZo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostsLambdaFunction"
              },
              "CodeSha256": "z3iM6vtkjp8E4mg5KIUtgkwlwcIWIyVaBonNBll7UTE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "test-tutorialedge-rest-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceAchievements": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "achievements",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "v1",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1Comments": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "comments",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1Challenges": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "challenges",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1User": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1Code": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "code",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1Posts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "posts",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1CommentsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT,POST,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Comments"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1UserOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1User"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1CodeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Code"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodAchievementsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAchievements"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AchievementsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1CommentsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Comments"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CommentsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1CommentsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Comments"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CommentsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1CommentsPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Comments"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CommentsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1CommentsDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Comments"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CommentsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1ChallengesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Challenges"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ChallengesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1ChallengesPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Challenges"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ChallengesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1ChallengesPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Challenges"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ChallengesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1ChallengesDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Challenges"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ChallengesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1UserGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1User"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1UserPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1User"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1CodePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Code"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CodeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1PostsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Posts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1PostsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Posts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1PostsPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Posts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1PostsDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Posts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1589304445346": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "test"
            },
            "DependsOn": [
              "ApiGatewayMethodV1CommentsOptions",
              "ApiGatewayMethodV1UserOptions",
              "ApiGatewayMethodV1CodeOptions",
              "ApiGatewayMethodGet",
              "ApiGatewayMethodAchievementsGet",
              "ApiGatewayMethodV1CommentsGet",
              "ApiGatewayMethodV1CommentsPost",
              "ApiGatewayMethodV1CommentsPut",
              "ApiGatewayMethodV1CommentsDelete",
              "ApiGatewayMethodV1ChallengesGet",
              "ApiGatewayMethodV1ChallengesPost",
              "ApiGatewayMethodV1ChallengesPut",
              "ApiGatewayMethodV1ChallengesDelete",
              "ApiGatewayMethodV1UserGet",
              "ApiGatewayMethodV1UserPost",
              "ApiGatewayMethodV1CodePost",
              "ApiGatewayMethodV1PostsGet",
              "ApiGatewayMethodV1PostsPost",
              "ApiGatewayMethodV1PostsPut",
              "ApiGatewayMethodV1PostsDelete"
            ]
          },
          "HealthLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HealthLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AchievementsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AchievementsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CommentsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CommentsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ChallengesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ChallengesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CodeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CodeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PostsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "HealthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HealthLambdaVersion2X6Li495ffXTG5FCdjn3fXa0Ueqxx2VF5HSitAYkmm8"
            }
          },
          "AchievementsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AchievementsLambdaVersion3z3HEaGGbUZ1HT0jFhvzVM3N2RWilh9378tNdrEsE"
            }
          },
          "CommentsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CommentsLambdaVersionU0xd08tpDsxGCg7CIkaADpPzI7Apz1Mrjlau2p8gCA"
            }
          },
          "ChallengesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ChallengesLambdaVersion0aK8VzZ6933dGe6GmMp62Z5ytqmmtPagS3yuU8gw"
            }
          },
          "UsersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersLambdaVersion2VAoJLHnYF7JmDHymW8RLKJQu93ybLt8HvuoxRfjiY"
            }
          },
          "CodeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CodeLambdaVersionhgGv8kuVx750NMOP5YfRo8ZTMu4p831CgD2P8xzuuqI"
            }
          },
          "PostsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostsLambdaVersionEJZt7AcENU0UsNcQMq9LhchaD3qESN96OTAgMwSCZo"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-west-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/test"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "health": {
        "handler": "bin/health",
        "environment": {},
        "events": [
          {
            "http": {
              "path": "",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "tutorialedge-rest-api-test-health",
        "package": {},
        "memory": 512,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      },
      "achievements": {
        "handler": "bin/achievements",
        "events": [
          {
            "http": {
              "path": "achievements",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "tutorialedge-rest-api-test-achievements",
        "package": {},
        "memory": 512,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      },
      "comments": {
        "handler": "bin/comments",
        "environment": {
          "AUTH0_SIGNING_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIC+jCCAeKgAwIBAgIJI4S/RnH+v3qVMA0GCSqGSIb3DQEBBQUAMCQxIjAgBgNV\r\nBAMTGXR1dG9yaWFsZWRnZS5ldS5hdXRoMC5jb20wHhcNMTcwMTA2MTQxODE1WhcN\r\nMzAwOTE1MTQxODE1WjAkMSIwIAYDVQQDExl0dXRvcmlhbGVkZ2UuZXUuYXV0aDAu\r\nY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Ln5SAQAYkXoRN/\r\ni7cynzrERIQIDnE5MaumYQvQgOQheplIH1VJhVLBjYp3W6fTyfogvE0SoLUFr267\r\nu+JIDl6Mu8CZDzUBd+A2MF6n9HPQPYWnCDWntVcwrqh2pkb7nEHSbY2y2eryhQIM\r\nTS2XyxHx/Jtpx+0518sGM47KXd/WKaP5dfhgwup/8mu7W/vpPuNNgs6ORy2gjiN8\r\nb8fRsulxu7m/AtBpvY2vPKyMKJvoMHQuY5CCue3K8Rq8T1FaznsaoUKxn+eM9MZF\r\nDYcBIo2Dhg2VTMpn+H88Ji2Q2FS57NkboZgsM+465GTc4hjIxNmi3iUbTDGolPqO\r\nUbNcUQIDAQABoy8wLTAMBgNVHRMEBTADAQH/MB0GA1UdDgQWBBSc6/7ITJyhrk0q\r\nAgYK3/RNwYlG/DANBgkqhkiG9w0BAQUFAAOCAQEATP0SO03HI7i3rUlguzdKh20N\r\n/Tcr+5L4AhYKBS3XT3RGgAbbspQ0EPi5U07zZ7YWQDVWVbmM20tVgYz5pj2LQupq\r\no4IZIea66wdZe9vJ0+FUSmBKjoQbhfhfi/AkIi4/n6ws3Gx2L0DWiwrlgz1mKSKA\r\nRJOv62o9PHlY7XWRhWEI/2FkeApHEu/iLC4vuCBuNIEgppm3m21wYSSGM+gSyGaN\r\nfMSIdjk2PmknhRtq+72uWaJpNTNUbeG3xFoZoa3uIA6TpBHgA7smHY6AE0cSvG7D\r\nM9efoZSisO/gX51ho3MT1Mywy/P3UOYb0u+lyLevhrbcCsDZSHKOHT02sw+hZA==\r\n-----END CERTIFICATE-----",
          "DB_USERNAME": "doadmin",
          "DB_PASSWORD": "bw0bfbhocs14fiyq",
          "DB_HOST": "db-mysql-nyc1-16484-do-user-1074347-0.a.db.ondigitalocean.com",
          "DB_TABLE": "defaultdb",
          "MAILGUN_API_KEY": "key-55e42fdafd8773bb4ad1a8b1e8a029d3"
        },
        "events": [
          {
            "http": {
              "path": "v1/comments",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/comments",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/comments",
              "method": "put",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/comments",
              "method": "delete",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "tutorialedge-rest-api-test-comments",
        "package": {},
        "memory": 512,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      },
      "challenges": {
        "handler": "bin/challenges",
        "events": [
          {
            "http": {
              "path": "v1/challenges",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/challenges",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/challenges",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/challenges",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "tutorialedge-rest-api-test-challenges",
        "package": {},
        "memory": 512,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      },
      "users": {
        "handler": "bin/users",
        "environment": {
          "AUTH0_SIGNING_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIC+jCCAeKgAwIBAgIJI4S/RnH+v3qVMA0GCSqGSIb3DQEBBQUAMCQxIjAgBgNV\r\nBAMTGXR1dG9yaWFsZWRnZS5ldS5hdXRoMC5jb20wHhcNMTcwMTA2MTQxODE1WhcN\r\nMzAwOTE1MTQxODE1WjAkMSIwIAYDVQQDExl0dXRvcmlhbGVkZ2UuZXUuYXV0aDAu\r\nY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Ln5SAQAYkXoRN/\r\ni7cynzrERIQIDnE5MaumYQvQgOQheplIH1VJhVLBjYp3W6fTyfogvE0SoLUFr267\r\nu+JIDl6Mu8CZDzUBd+A2MF6n9HPQPYWnCDWntVcwrqh2pkb7nEHSbY2y2eryhQIM\r\nTS2XyxHx/Jtpx+0518sGM47KXd/WKaP5dfhgwup/8mu7W/vpPuNNgs6ORy2gjiN8\r\nb8fRsulxu7m/AtBpvY2vPKyMKJvoMHQuY5CCue3K8Rq8T1FaznsaoUKxn+eM9MZF\r\nDYcBIo2Dhg2VTMpn+H88Ji2Q2FS57NkboZgsM+465GTc4hjIxNmi3iUbTDGolPqO\r\nUbNcUQIDAQABoy8wLTAMBgNVHRMEBTADAQH/MB0GA1UdDgQWBBSc6/7ITJyhrk0q\r\nAgYK3/RNwYlG/DANBgkqhkiG9w0BAQUFAAOCAQEATP0SO03HI7i3rUlguzdKh20N\r\n/Tcr+5L4AhYKBS3XT3RGgAbbspQ0EPi5U07zZ7YWQDVWVbmM20tVgYz5pj2LQupq\r\no4IZIea66wdZe9vJ0+FUSmBKjoQbhfhfi/AkIi4/n6ws3Gx2L0DWiwrlgz1mKSKA\r\nRJOv62o9PHlY7XWRhWEI/2FkeApHEu/iLC4vuCBuNIEgppm3m21wYSSGM+gSyGaN\r\nfMSIdjk2PmknhRtq+72uWaJpNTNUbeG3xFoZoa3uIA6TpBHgA7smHY6AE0cSvG7D\r\nM9efoZSisO/gX51ho3MT1Mywy/P3UOYb0u+lyLevhrbcCsDZSHKOHT02sw+hZA==\r\n-----END CERTIFICATE-----",
          "DB_USERNAME": "doadmin",
          "DB_PASSWORD": "bw0bfbhocs14fiyq",
          "DB_HOST": "db-mysql-nyc1-16484-do-user-1074347-0.a.db.ondigitalocean.com",
          "DB_TABLE": "defaultdb",
          "MAILGUN_API_KEY": "key-55e42fdafd8773bb4ad1a8b1e8a029d3"
        },
        "events": [
          {
            "http": {
              "path": "v1/user",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/user",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "tutorialedge-rest-api-test-users",
        "package": {},
        "memory": 512,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      },
      "code": {
        "handler": "code/code.lambda_handler",
        "runtime": "python3.6",
        "timeout": 900,
        "vpc": {
          "subnetIds": [
            "subnet-0cbb13cb6e95802a5"
          ]
        },
        "events": [
          {
            "http": {
              "path": "v1/code",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "tutorialedge-rest-api-test-code",
        "package": {},
        "memory": 512
      },
      "posts": {
        "handler": "bin/posts",
        "environment": {
          "AUTH0_SIGNING_KEY": "-----BEGIN CERTIFICATE-----\r\nMIIC+jCCAeKgAwIBAgIJI4S/RnH+v3qVMA0GCSqGSIb3DQEBBQUAMCQxIjAgBgNV\r\nBAMTGXR1dG9yaWFsZWRnZS5ldS5hdXRoMC5jb20wHhcNMTcwMTA2MTQxODE1WhcN\r\nMzAwOTE1MTQxODE1WjAkMSIwIAYDVQQDExl0dXRvcmlhbGVkZ2UuZXUuYXV0aDAu\r\nY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Ln5SAQAYkXoRN/\r\ni7cynzrERIQIDnE5MaumYQvQgOQheplIH1VJhVLBjYp3W6fTyfogvE0SoLUFr267\r\nu+JIDl6Mu8CZDzUBd+A2MF6n9HPQPYWnCDWntVcwrqh2pkb7nEHSbY2y2eryhQIM\r\nTS2XyxHx/Jtpx+0518sGM47KXd/WKaP5dfhgwup/8mu7W/vpPuNNgs6ORy2gjiN8\r\nb8fRsulxu7m/AtBpvY2vPKyMKJvoMHQuY5CCue3K8Rq8T1FaznsaoUKxn+eM9MZF\r\nDYcBIo2Dhg2VTMpn+H88Ji2Q2FS57NkboZgsM+465GTc4hjIxNmi3iUbTDGolPqO\r\nUbNcUQIDAQABoy8wLTAMBgNVHRMEBTADAQH/MB0GA1UdDgQWBBSc6/7ITJyhrk0q\r\nAgYK3/RNwYlG/DANBgkqhkiG9w0BAQUFAAOCAQEATP0SO03HI7i3rUlguzdKh20N\r\n/Tcr+5L4AhYKBS3XT3RGgAbbspQ0EPi5U07zZ7YWQDVWVbmM20tVgYz5pj2LQupq\r\no4IZIea66wdZe9vJ0+FUSmBKjoQbhfhfi/AkIi4/n6ws3Gx2L0DWiwrlgz1mKSKA\r\nRJOv62o9PHlY7XWRhWEI/2FkeApHEu/iLC4vuCBuNIEgppm3m21wYSSGM+gSyGaN\r\nfMSIdjk2PmknhRtq+72uWaJpNTNUbeG3xFoZoa3uIA6TpBHgA7smHY6AE0cSvG7D\r\nM9efoZSisO/gX51ho3MT1Mywy/P3UOYb0u+lyLevhrbcCsDZSHKOHT02sw+hZA==\r\n-----END CERTIFICATE-----",
          "DB_USERNAME": "doadmin",
          "DB_PASSWORD": "bw0bfbhocs14fiyq",
          "DB_HOST": "db-mysql-nyc1-16484-do-user-1074347-0.a.db.ondigitalocean.com",
          "DB_TABLE": "defaultdb",
          "MAILGUN_API_KEY": "key-55e42fdafd8773bb4ad1a8b1e8a029d3"
        },
        "events": [
          {
            "http": {
              "path": "v1/posts",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/posts",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/posts",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "v1/posts",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "tutorialedge-rest-api-test-posts",
        "package": {},
        "memory": 512,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {}
      }
    },
    "artifact": "/Users/elliot/Documents/Projects/TutorialEdge/api.tutorialedge.net/.serverless/tutorialedge-rest-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/tutorialedge-rest-api/test/1589304445325-2020-05-12T17:27:25.325Z",
    "artifact": "tutorialedge-rest-api.zip"
  }
}